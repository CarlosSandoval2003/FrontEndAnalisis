{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jawic\\\\Desktop\\\\SSS\\\\102654_MERN_Ecommerce\\\\MERN_Ecommerce\\\\e-commerce-frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst userId = localStorage.getItem(\"userId\");\nconst ShopContextProvider = props => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const getDefaultCart = () => {\n    let cart = {};\n    for (let i = 0; i < 300; i++) {\n      cart[i] = 0;\n    }\n    return cart;\n  };\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    fetch('http://localhost:4000/allproductsDisplay').then(res => res.json()).then(data => setProducts(data));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch('http://localhost:4000/getcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem(\"auth-token\")}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify()\n      }).then(resp => resp.json()).then(data => {\n        setCartItems(data);\n      });\n    }\n  }, []);\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = products.find(product => product.id === Number(item));\n        totalAmount += cartItems[item] * itemInfo.new_price;\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = async () => {\n    if (userId === \"0\") {\n      return 0; // Si el userId es 0, no hay elementos en el carrito\n    } else {\n      try {\n        const response = await fetch(`http://localhost:4000/getCartItemCount/${userId}`);\n        if (response.ok) {\n          const data = await response.json();\n          return data.count;\n        } else {\n          throw new Error('Error al obtener la cantidad de elementos del carrito');\n        }\n      } catch (error) {\n        console.error(error);\n        return 0;\n      }\n    }\n  };\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem(\"auth-token\")}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem(\"auth-token\")}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n  const contextValue = {\n    products,\n    getTotalCartItems,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    getTotalCartAmount\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"KFHDl6ZsVIFtgbiz1hPr8bkRw6o=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","userId","localStorage","getItem","ShopContextProvider","props","_s","products","setProducts","getDefaultCart","cart","i","cartItems","setCartItems","fetch","then","res","json","data","method","headers","Accept","body","JSON","stringify","resp","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","response","ok","count","Error","error","console","addToCart","itemId","prev","log","removeFromCart","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jawic/Desktop/SSS/102654_MERN_Ecommerce/MERN_Ecommerce/e-commerce-frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\nconst userId = localStorage.getItem(\"userId\");\r\nconst ShopContextProvider = (props) => {\r\n\r\n  const [products,setProducts] = useState([]);\r\n  \r\n  const getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let i = 0; i < 300; i++) {\r\n      cart[i] = 0;\r\n    }\r\n    return cart;\r\n  };\r\n\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/allproductsDisplay') \r\n          .then((res) => res.json()) \r\n          .then((data) => setProducts(data))\r\n\r\n    if(localStorage.getItem(\"auth-token\"))\r\n    {\r\n      fetch('http://localhost:4000/getcart', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept:'application/form-data',\r\n        'auth-token':`${localStorage.getItem(\"auth-token\")}`,\r\n        'Content-Type':'application/json',\r\n      },\r\n      body: JSON.stringify(),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {setCartItems(data)});\r\n    }\r\n\r\n}, [])\r\n  \r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        let itemInfo = products.find((product) => product.id === Number(item));\r\n        totalAmount += cartItems[item] * itemInfo.new_price;\r\n      }\r\n    }\r\n    return totalAmount;\r\n  };\r\n\r\n  const getTotalCartItems = async () => {\r\n    if (userId === \"0\") {\r\n      return 0; // Si el userId es 0, no hay elementos en el carrito\r\n    } else {\r\n      try {\r\n        const response = await fetch(`http://localhost:4000/getCartItemCount/${userId}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          return data.count;\r\n        } else {\r\n          throw new Error('Error al obtener la cantidad de elementos del carrito');\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        return 0;\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n    if(localStorage.getItem(\"auth-token\"))\r\n    {\r\n      fetch('http://localhost:4000/addtocart', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept:'application/form-data',\r\n        'auth-token':`${localStorage.getItem(\"auth-token\")}`,\r\n        'Content-Type':'application/json',\r\n      },\r\n      body: JSON.stringify({\"itemId\":itemId}),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {console.log(data)});\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n    if(localStorage.getItem(\"auth-token\"))\r\n    {\r\n      fetch('http://localhost:4000/removefromcart', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept:'application/form-data',\r\n        'auth-token':`${localStorage.getItem(\"auth-token\")}`,\r\n        'Content-Type':'application/json',\r\n      },\r\n      body: JSON.stringify({\"itemId\":itemId}),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {console.log(data)});\r\n    }\r\n  };\r\n\r\n  const contextValue = {products, getTotalCartItems, cartItems, addToCart, removeFromCart, getTotalCartAmount };\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}