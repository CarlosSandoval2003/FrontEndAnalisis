{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jawic\\\\Desktop\\\\SSS\\\\102654_MERN_Ecommerce\\\\MERN_Ecommerce\\\\e-commerce-frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst ShopContextProvider = props => {\n  _s();\n  const getDefaultCart = () => {\n    let cart = {};\n    for (let i = 0; i < 300; i++) {\n      cart[i] = 0;\n    }\n    return cart;\n  };\n  const [products, setProducts] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    fetchProducts();\n    fetchCartItems();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/allproducts\");\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n    }\n  };\n  const fetchCartItems = async () => {\n    if (localStorage.getItem(\"auth-token\")) {\n      try {\n        const response = await fetch(\"http://localhost:4000/getcart\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"auth-token\": localStorage.getItem(\"auth-token\"),\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify()\n        });\n        const data = await response.json();\n        setCartItems(data);\n      } catch (error) {\n        console.error(\"Error fetching cart items:\", error);\n      }\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = products.find(product => product.id === Number(item));\n        totalAmount += cartItems[item] * itemInfo.new_price;\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch(\"http://localhost:4000/addtocart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"auth-token\": localStorage.getItem(\"auth-token\"),\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          itemId: itemId\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch(\"http://localhost:4000/removefromcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"auth-token\": localStorage.getItem(\"auth-token\"),\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          itemId: itemId\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n  const contextValue = {\n    products,\n    getTotalCartItems,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    getTotalCartAmount\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"st77IRJgAXSsZe/h+JTNeaHqcSA=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","props","_s","getDefaultCart","cart","i","products","setProducts","cartItems","setCartItems","fetchProducts","fetchCartItems","response","fetch","data","json","error","console","localStorage","getItem","method","headers","Accept","body","JSON","stringify","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","addToCart","itemId","prev","then","resp","log","removeFromCart","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jawic/Desktop/SSS/102654_MERN_Ecommerce/MERN_Ecommerce/e-commerce-frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let i = 0; i < 300; i++) {\r\n      cart[i] = 0;\r\n    }\r\n    return cart;\r\n  };\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    fetchCartItems();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:4000/allproducts\");\r\n      const data = await response.json();\r\n      setProducts(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching products:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchCartItems = async () => {\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      try {\r\n        const response = await fetch(\"http://localhost:4000/getcart\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"auth-token\": localStorage.getItem(\"auth-token\"),\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(),\r\n        });\r\n        const data = await response.json();\r\n        setCartItems(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching cart items:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        let itemInfo = products.find((product) => product.id === Number(item));\r\n        totalAmount += cartItems[item] * itemInfo.new_price;\r\n      }\r\n    }\r\n    return totalAmount;\r\n  };\r\n\r\n  const getTotalCartItems = () => {\r\n    let totalItem = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        totalItem += cartItems[item];\r\n      }\r\n    }\r\n    return totalItem;\r\n  };\r\n\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      fetch(\"http://localhost:4000/addtocart\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"auth-token\": localStorage.getItem(\"auth-token\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ itemId: itemId }),\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n        });\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      fetch(\"http://localhost:4000/removefromcart\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"auth-token\": localStorage.getItem(\"auth-token\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ itemId: itemId }),\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n        });\r\n    }\r\n  };\r\n\r\n  const contextValue = {\r\n    products,\r\n    getTotalCartItems,\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    getTotalCartAmount,\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}