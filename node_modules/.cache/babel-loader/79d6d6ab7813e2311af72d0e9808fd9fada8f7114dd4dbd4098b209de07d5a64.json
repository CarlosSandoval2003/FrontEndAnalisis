{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jawic\\\\Desktop\\\\SSS\\\\102654_MERN_Ecommerce\\\\MERN_Ecommerce\\\\e-commerce-frontend\\\\src\\\\Components\\\\CartItems\\\\CartItems.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./CartItems.css\";\nimport cross_icon from \"../Assets/cart_cross_icon.png\";\nimport { ShopContext } from \"../../Context/ShopContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartItems = () => {\n  _s();\n  const [displayedItems, setDisplayedItems] = useState([]);\n  const [discounts, setDiscounts] = useState({});\n  const [shippingMethod, setShippingMethod] = useState(1); // Método de envío predeterminado\n  const [total, setTotal] = useState(3000); // Total de compra predeterminado\n  const userId = localStorage.getItem(\"userId\");\n  const [addresses, setAddresses] = useState([]);\n  const [address, setAddress] = useState();\n  const [shippingMethods, setShippingMethods] = useState([]);\n  const [deliveryTime, setDeliveryTime] = useState(\"\");\n  const [showAddressForm, setShowAddressForm] = useState(false);\n  const [paymentMethods, setPaymentMethods] = useState([]);\n  const [showPaymentForm, setShowPaymentForm] = useState(false);\n  const [cardNumberError, setCardNumberError] = useState(\"\");\n  const [cvvError, setCVVError] = useState(\"\");\n  const [expiryDateError, setExpiryDateError] = useState(\"\");\n  const [newAddress, setNewAddress] = useState({\n    direccion: \"\",\n    estado: \"\",\n    ciudad: \"\",\n    codigo_postal: \"\",\n    id_pais: \"\"\n  });\n  const [countries, setCountries] = useState([]);\n  const [newPaymentMethod, setNewPaymentMethod] = useState({\n    nombre_portador: \"\",\n    numero_tarjeta: \"\",\n    cvv: \"\",\n    fecha_expiracion: \"\"\n  });\n  const [validExpiryDate, setValidExpiryDate] = useState(false);\n  const [saldo, setSaldo] = useState(\"\");\n  const fetchPaymentMethods = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/paymentMethods/${userId}`);\n      const data = await response.json();\n      setPaymentMethods(data);\n    } catch (error) {\n      console.error('Error fetching payment methods:', error);\n    }\n  };\n  useEffect(() => {\n    if (userId && userId !== \"0\") {\n      fetchPaymentMethods();\n    }\n  }, [userId]);\n  const handleOrder = () => {\n    // Lógica para enviar la solicitud al endpoint de checkout\n  };\n  useEffect(() => {\n    if (userId && userId !== \"0\") {\n      fetch(`http://localhost:4000/cartItems/${userId}`).then(res => res.json()).then(data => {\n        setDisplayedItems(data);\n      });\n      fetch(`http://localhost:4000/userAddresses/${userId}`).then(res => res.json()).then(data => {\n        setAddresses(data);\n      });\n      fetch(`http://localhost:4000/shippingMethods`).then(res => res.json()).then(data => {\n        setShippingMethods(data);\n      });\n      fetch(`http://localhost:4000/countries`).then(res => res.json()).then(data => {\n        setCountries(data);\n      });\n    }\n  }, []);\n  const handleAddNewAddress = () => {\n    setShowAddressForm(true);\n  };\n  const handleCancelAddress = () => {\n    setShowAddressForm(false);\n    setNewAddress({\n      direccion: \"\",\n      estado: \"\",\n      ciudad: \"\",\n      codigo_postal: \"\",\n      id_pais: \"\"\n    });\n  };\n  const handleSaveAddress = () => {\n    // Guardar la nueva dirección en la base de datos\n    fetch(`http://localhost:4000/addAddress`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId,\n        ...newAddress\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        // Actualizar las direcciones mostradas después de agregar la nueva dirección\n        setAddresses([...addresses, newAddress]);\n        setShowAddressForm(false);\n        setNewAddress({\n          direccion: \"\",\n          estado: \"\",\n          ciudad: \"\",\n          codigo_postal: \"\",\n          id_pais: \"\"\n        });\n      } else {\n        console.error('Error:', data.error);\n      }\n    }).catch(error => console.error(\"Error:\", error));\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewAddress({\n      ...newAddress,\n      [name]: value\n    });\n  };\n  const handleCountryChange = e => {\n    setNewAddress({\n      ...newAddress,\n      id_pais: e.target.value\n    });\n  };\n  const handleCheckout = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/checkout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          shippingMethod,\n          cartItems: displayedItems.map(item => ({\n            id_item_producto: item.id,\n            cantidad: item.cantidad\n          }))\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        alert(data.error); // Mostrar mensaje de error en caso de existencias insuficientes\n      } else {\n        // Si todas las condiciones son exitosas, mostrar el formulario de método de pago\n        console.log(\"EL SALDO OBTENIDO DE TODO ELPROCESO: \", parseInt(saldo).toFixed(2));\n        console.log(\"TOTAL DE LA COMPRA: \", calculateTotal());\n        if (isNaN(parseFloat(saldo))) {\n          alert(\"ESCOGE UN METODO DE PAGO\");\n        } else if (calculateTotal() > parseInt(saldo).toFixed(2)) {\n          alert(\"SALDO INSUFICIENTE\");\n        } else {\n          console.log(addresses, shippingMethods, paymentMethods);\n          alert(\"vamos bien :v\");\n        }\n      }\n    } catch (error) {\n      console.error('Error en el proceso de checkout:', error);\n      alert(\"Ocurrió un error al procesar el checkout.\");\n    }\n  };\n  const handleDecrement = itemId => {\n    // Update displayedItems locally\n    setDisplayedItems(prevItems => prevItems.map(item => item.id === itemId && item.cantidad > 1 ? {\n      ...item,\n      cantidad: item.cantidad - 1\n    } : item));\n\n    // Update quantity on the server\n    fetch(`http://localhost:4000/cartItems/updateQuantity/${itemId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        operation: \"decrement\"\n      })\n    }).catch(error => console.error(\"Error:\", error));\n  };\n  const handleIncrement = itemId => {\n    // Update displayedItems locally\n    setDisplayedItems(prevItems => prevItems.map(item => item.id === itemId ? {\n      ...item,\n      cantidad: item.cantidad + 1\n    } : item));\n\n    // Update quantity on the server\n    fetch(`http://localhost:4000/cartItems/updateQuantity/${itemId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        operation: \"increment\"\n      })\n    }).catch(error => console.error(\"Error:\", error));\n  };\n  const handleShippingMethodChange = e => {\n    setShippingMethod(e.target.value);\n    console.log(e.target);\n    const selectedMethod = shippingMethods.find(method => method.nombre === e.target.value);\n    if (selectedMethod) {\n      switch (selectedMethod.id) {\n        case 1:\n          setDeliveryTime(\"De 4 a 5 días de entrega\");\n          break;\n        case 2:\n          setDeliveryTime(\"De 1 a 2 días de entrega\");\n          break;\n        case 3:\n          setDeliveryTime(\"De 1 a 3 días de entrega\");\n          break;\n        default:\n          setDeliveryTime(\"\");\n          break;\n      }\n    }\n  };\n  const handleAddressChange = e => {};\n  const handleRemoveItem = async (userId, itemId) => {\n    try {\n      const response = await fetch('http://localhost:4000/removeCartItem', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          itemId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Actualizar los ítems mostrados después de la eliminación\n        const updatedItems = displayedItems.filter(item => item.id !== itemId);\n        setDisplayedItems(updatedItems);\n      } else {\n        console.error('Error:', data.error);\n      }\n    } catch (error) {\n      console.error('Error removing item:', error);\n    }\n  };\n  const handleCancelPayment = () => {\n    // Limpiar los campos del formulario\n    setNewPaymentMethod({\n      nombre_portador: \"\",\n      numero_tarjeta: \"\",\n      cvv: \"\",\n      fecha_expiracion: \"\"\n    });\n    setShowPaymentForm(false);\n  };\n  const calculateTotal = () => {\n    // Sumar los totales de todos los items del carrito\n    const itemsTotal = displayedItems.reduce((total, item) => {\n      return total + (item.precio - item.precio * (item.descuento / 100)) * item.cantidad;\n    }, 0);\n\n    // Obtener el precio del método de envío escogido\n    const selectedMethod = shippingMethods.find(method => method.nombre === shippingMethod);\n    const shippingPrice = selectedMethod ? selectedMethod.precio : 0;\n\n    // Sumar el precio del método de envío al total de la compra\n    const total = itemsTotal + shippingPrice;\n    return total.toFixed(2);\n  };\n  const handlePaymentMethodChange = event => {\n    const selectedPaymentMethodId = event.target.value;\n    console.log(event.target.value);\n    // Llamar al backend para obtener el saldo asociado\n    fetch('http://localhost:4000/checkoutSaldo', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: userId,\n        paymentMethodId: selectedPaymentMethodId // Enviar el ID del método de pago seleccionado\n      })\n    }).then(response => response.json()).then(data => {\n      setSaldo(data.saldo);\n      console.log('Saldo:', data.saldo); // Mostrar el saldo en la consola o actualizar la interfaz de usuario\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  // Función para validar el formulario del nuevo método de pago\n  const validatePaymentMethod = () => {\n    const {\n      numero_tarjeta,\n      cvv,\n      fecha_expiracion\n    } = newPaymentMethod;\n\n    // Validar que el número de tarjeta tenga solo números y tenga exactamente 16 dígitos\n    const isValidCardNumber = /^\\d{16}$/.test(numero_tarjeta);\n\n    // Validar que el CVV tenga solo números y tenga exactamente 3 dígitos\n    const isValidCVV = /^\\d{3}$/.test(cvv);\n\n    // Validar la fecha de expiración\n    const isValidDate = validateExpiryDate(fecha_expiracion);\n    return isValidCardNumber && isValidCVV && isValidDate;\n  };\n\n  // Función para validar la fecha de expiración\n  const validateExpiryDate = value => {\n    // Validar que la fecha tenga el formato MM/YY\n    const isValidFormat = /^\\d{2}\\/\\d{2}$/.test(value);\n    if (!isValidFormat) {\n      setValidExpiryDate(false);\n      return false;\n    }\n\n    // Extraer el mes y el año de la fecha de expiración\n    const [month, year] = value.split(\"/\");\n    const currentYear = new Date().getFullYear() % 100; // Obtener los últimos dos dígitos del año actual\n    const currentMonth = new Date().getMonth() + 1; // Obtener el mes actual\n\n    // Validar que el mes esté en el rango de 01 a 12\n    const isValidMonth = parseInt(month, 10) >= 1 && parseInt(month, 10) <= 12;\n\n    // Validar que el año sea mayor o igual al año actual si el mes es mayor que el actual\n    const isValidYear = parseInt(year, 10) >= currentYear || parseInt(month, 10) > currentMonth;\n\n    // Actualizar el estado de la validez de la fecha de expiración\n    const isValid = isValidMonth && isValidYear;\n    setValidExpiryDate(isValid);\n    return isValid;\n  };\n  const handleSavePaymentMethod = async () => {\n    // Validar el formulario del método de pago\n    const isValid = validatePaymentMethod();\n    if (isValid) {\n      const {\n        numero_tarjeta,\n        cvv,\n        fecha_expiracion\n      } = newPaymentMethod;\n\n      // Realizar la consulta a la base de datos\n      try {\n        const response = await fetch('http://localhost:4000/checkCreditCard', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            numero_tarjeta,\n            cvv,\n            fecha_expiracion\n          })\n        });\n        const data = await response.json();\n        if (data.exists) {\n          // Insertar los datos del método de pago en la base de datos\n          try {\n            const saveResponse = await fetch('http://localhost:4000/savePaymentMethod', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                userId,\n                numero_tarjeta,\n                cvv,\n                nombre_portador: newPaymentMethod.nombre_portador,\n                fecha_expiracion\n              })\n            });\n            const saveData = await saveResponse.json();\n            if (saveData.success) {\n              alert(\"Tarjeta agregada con éxito\");\n              // Limpiar los campos del formulario después del éxito\n              setNewPaymentMethod({\n                nombre_portador: \"\",\n                numero_tarjeta: \"\",\n                cvv: \"\",\n                fecha_expiracion: \"\"\n              });\n              fetchPaymentMethods();\n\n              // Cerrar el formulario (aquí puedes manejar el estado para mostrar/ocultar el formulario)\n              setShowPaymentForm(false);\n            } else {\n              console.error('Error al guardar el método de pago:', saveData.error);\n              alert(\"Ocurrió un error al guardar el método de pago.\");\n            }\n          } catch (error) {\n            console.error('Error al guardar el método de pago:', error);\n            alert(\"Ocurrió un error al guardar el método de pago.\");\n          }\n        } else {\n          alert(\"La tarjeta ingresada no existe\");\n        }\n      } catch (error) {\n        console.error('Error al verificar la tarjeta:', error);\n        alert(\"Ocurrió un error al verificar la tarjeta.\");\n      }\n    } else {\n      alert(\"Por favor, completa todos los campos correctamente.\");\n    }\n  };\n\n  // Función para manejar el cambio en el número de tarjeta\n  const handleCardNumberChange = e => {\n    const {\n      value\n    } = e.target;\n    // Validar que solo se ingresen números y que no exceda los 16 dígitos\n    if (/^\\d{0,16}$/.test(value)) {\n      setNewPaymentMethod({\n        ...newPaymentMethod,\n        numero_tarjeta: value\n      });\n      // Validar la longitud del número de tarjeta\n      if (value.length < 16) {\n        setCardNumberError(\"Número de tarjeta incompleto\");\n      } else {\n        setCardNumberError(\"\");\n      }\n    }\n  };\n\n  // Función para manejar el cambio en el CVV\n  const handleCVVChange = e => {\n    const {\n      value\n    } = e.target;\n    // Validar que solo se ingresen números y que no exceda los 3 dígitos\n    if (/^\\d{0,3}$/.test(value)) {\n      setNewPaymentMethod({\n        ...newPaymentMethod,\n        cvv: value\n      });\n      // Validar la longitud del CVV\n      if (value.length < 3) {\n        setCVVError(\"CVV incompleto\");\n      } else {\n        setCVVError(\"\");\n      }\n    }\n  };\n\n  // Función para manejar el cambio en la fecha de expiración\n  const handleExpiryDateChange = e => {\n    let {\n      value\n    } = e.target;\n    // Validar que solo se ingresen números y que se agregue automáticamente el \"/\"\n    if (/^\\d{0,2}(\\/)?(\\d{0,2})?$/.test(value)) {\n      // Agregar automáticamente el \"/\" después de ingresar los primeros dos dígitos\n      if (/^\\d{2}$/.test(value)) {\n        value += \"/\";\n      }\n      // Validar la fecha de expiración\n      const [month, year] = value.split(\"/\");\n      const currentYear = new Date().getFullYear() % 100; // Obtener los últimos dos dígitos del año actual\n      const currentMonth = new Date().getMonth() + 1; // Obtener el mes actual\n      if (parseInt(month, 10) < currentMonth && parseInt(year, 10) <= currentYear || parseInt(year, 10) < currentYear || parseInt(year, 10) === currentYear && parseInt(month, 10) < currentMonth) {\n        setExpiryDateError(\"Fecha Incorrecta\");\n      } else {\n        setExpiryDateError(\"\");\n      }\n      // Actualizar el estado de la fecha de expiración\n      setNewPaymentMethod({\n        ...newPaymentMethod,\n        fecha_expiracion: value\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cartitems\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cartitems-format-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Producto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Precio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cantidad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Descuento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this), displayedItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cartitems-format-main cartitems-format\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cartitems-product-icon\",\n          src: item.imagen_producto1,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.nombre_producto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Q.\", item.precio.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDecrement(item.id),\n            disabled: item.cantidad <= 1,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.cantidad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleIncrement(item.id),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [item.descuento, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Q.\", ((item.precio - item.precio * (item.descuento / 100)) * item.cantidad).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleRemoveItem(userId, item.id);\n          },\n          className: \"cartitems-remove-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cross_icon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }, this)), showAddressForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Nueva Direcci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Direcci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"direccion\",\n          value: newAddress.direccion,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Estado:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"estado\",\n          value: newAddress.estado,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ciudad:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"ciudad\",\n          value: newAddress.ciudad,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"C\\xF3digo Postal:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"codigo_postal\",\n          value: newAddress.codigo_postal,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Pa\\xEDs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newAddress.id_pais,\n          onChange: handleCountryChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar Pa\\xEDs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 15\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: country.id,\n            children: country.nombre_pais\n          }, country.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveAddress,\n          children: \"Guardar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelAddress,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"additional-elements\",\n      children: [\"Direcci\\xF3n:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: address,\n        onChange: handleAddressChange,\n        children: addresses.map((address, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: address.id,\n          children: `${address.ciudad}, ${address.direccion}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewAddress,\n        children: \"Agregar Nueva Direcci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"M\\xE9todo de Env\\xEDo:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: shippingMethod,\n            onChange: handleShippingMethodChange,\n            children: shippingMethods.map((method, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: method.id,\n              children: `${method.nombre} - Q.${method.precio}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), deliveryTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Total de la Compra:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: `Q.${calculateTotal()}`,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"M\\xE9todos de Pago:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"paymentMethod\",\n            onChange: handlePaymentMethodChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccionar Metodo de Pago\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 13\n            }, this), paymentMethods.map((method, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: method.id,\n              children: `No. Tarjeta: ${method.numero_tarjeta}, Portador: ${method.nombre_portador}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowPaymentForm(true),\n            children: \"Agregar Nuevo M\\xE9todo de Pago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this), showPaymentForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nuevo M\\xE9todo de Pago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Nombre del Portador:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"nombre_portador\",\n              value: newPaymentMethod.nombre_portador,\n              onChange: handlePaymentMethodChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"N\\xFAmero de Tarjeta:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"numero_tarjeta\",\n              value: newPaymentMethod.numero_tarjeta,\n              onChange: handleCardNumberChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 3\n            }, this), cardNumberError && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: cardNumberError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"CVV:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"cvv\",\n              value: newPaymentMethod.cvv,\n              onChange: handleCVVChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 3\n            }, this), cvvError && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: cvvError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Fecha de Expiraci\\xF3n (MM/YY):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"fecha_expiracion\",\n              value: newPaymentMethod.fecha_expiracion,\n              onChange: handleExpiryDateChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 3\n            }, this), expiryDateError && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: expiryDateError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSavePaymentMethod,\n              disabled: cardNumberError || cvvError || expiryDateError,\n              children: \"Guardar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancelPayment,\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCheckout,\n        children: \"Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 494,\n    columnNumber: 5\n  }, this);\n};\n_s(CartItems, \"cZVMJjClt6xOg4m65YuctFiBV7E=\");\n_c = CartItems;\nexport default CartItems;\nvar _c;\n$RefreshReg$(_c, \"CartItems\");","map":{"version":3,"names":["React","useContext","useEffect","useState","cross_icon","ShopContext","jsxDEV","_jsxDEV","CartItems","_s","displayedItems","setDisplayedItems","discounts","setDiscounts","shippingMethod","setShippingMethod","total","setTotal","userId","localStorage","getItem","addresses","setAddresses","address","setAddress","shippingMethods","setShippingMethods","deliveryTime","setDeliveryTime","showAddressForm","setShowAddressForm","paymentMethods","setPaymentMethods","showPaymentForm","setShowPaymentForm","cardNumberError","setCardNumberError","cvvError","setCVVError","expiryDateError","setExpiryDateError","newAddress","setNewAddress","direccion","estado","ciudad","codigo_postal","id_pais","countries","setCountries","newPaymentMethod","setNewPaymentMethod","nombre_portador","numero_tarjeta","cvv","fecha_expiracion","validExpiryDate","setValidExpiryDate","saldo","setSaldo","fetchPaymentMethods","response","fetch","data","json","error","console","handleOrder","then","res","handleAddNewAddress","handleCancelAddress","handleSaveAddress","method","headers","body","JSON","stringify","success","catch","handleInputChange","e","name","value","target","handleCountryChange","handleCheckout","cartItems","map","item","id_item_producto","id","cantidad","alert","log","parseInt","toFixed","calculateTotal","isNaN","parseFloat","handleDecrement","itemId","prevItems","operation","handleIncrement","handleShippingMethodChange","selectedMethod","find","nombre","handleAddressChange","handleRemoveItem","updatedItems","filter","handleCancelPayment","itemsTotal","reduce","precio","descuento","shippingPrice","handlePaymentMethodChange","event","selectedPaymentMethodId","paymentMethodId","validatePaymentMethod","isValidCardNumber","test","isValidCVV","isValidDate","validateExpiryDate","isValidFormat","month","year","split","currentYear","Date","getFullYear","currentMonth","getMonth","isValidMonth","isValidYear","isValid","handleSavePaymentMethod","exists","saveResponse","saveData","handleCardNumberChange","length","handleCVVChange","handleExpiryDateChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","imagen_producto1","alt","nombre_producto","onClick","disabled","type","onChange","country","nombre_pais","index","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/jawic/Desktop/SSS/102654_MERN_Ecommerce/MERN_Ecommerce/e-commerce-frontend/src/Components/CartItems/CartItems.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./CartItems.css\";\r\nimport cross_icon from \"../Assets/cart_cross_icon.png\";\r\nimport { ShopContext } from \"../../Context/ShopContext\";\r\n\r\nconst CartItems = () => {\r\n  const [displayedItems, setDisplayedItems] = useState([]);\r\n  const [discounts, setDiscounts] = useState({});\r\n  const [shippingMethod, setShippingMethod] = useState(1); // Método de envío predeterminado\r\n  const [total, setTotal] = useState(3000); // Total de compra predeterminado\r\n  const userId = localStorage.getItem(\"userId\");\r\n  const [addresses, setAddresses] = useState([]);\r\n  const [address, setAddress] = useState();\r\n  const [shippingMethods, setShippingMethods] = useState([]);\r\n  const [deliveryTime, setDeliveryTime] = useState(\"\");\r\n  const [showAddressForm, setShowAddressForm] = useState(false);\r\n  const [paymentMethods, setPaymentMethods] = useState([]);\r\n  const [showPaymentForm, setShowPaymentForm] = useState(false);\r\n  const [cardNumberError, setCardNumberError] = useState(\"\");\r\nconst [cvvError, setCVVError] = useState(\"\");\r\nconst [expiryDateError, setExpiryDateError] = useState(\"\");\r\n  const [newAddress, setNewAddress] = useState({\r\n    direccion: \"\",\r\n    estado: \"\",\r\n    ciudad: \"\",\r\n    codigo_postal: \"\",\r\n    id_pais: \"\"\r\n  });\r\n  const [countries, setCountries] = useState([]);\r\n  const [newPaymentMethod, setNewPaymentMethod] = useState({\r\n    nombre_portador: \"\",\r\n    numero_tarjeta: \"\",\r\n    cvv: \"\",\r\n    fecha_expiracion: \"\"\r\n  });\r\n  const [validExpiryDate, setValidExpiryDate] = useState(false);\r\n  const [saldo, setSaldo] = useState(\"\");\r\n\r\n  const fetchPaymentMethods = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/paymentMethods/${userId}`);\r\n      const data = await response.json();\r\n      setPaymentMethods(data);\r\n    } catch (error) {\r\n      console.error('Error fetching payment methods:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userId && userId !== \"0\") {\r\n      fetchPaymentMethods();\r\n    }\r\n  }, [userId]);\r\n\r\n  const handleOrder = () => {\r\n    // Lógica para enviar la solicitud al endpoint de checkout\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    if (userId && userId !== \"0\") {\r\n      fetch(`http://localhost:4000/cartItems/${userId}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setDisplayedItems(data);\r\n        });\r\n        fetch(`http://localhost:4000/userAddresses/${userId}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setAddresses(data);\r\n        });\r\n        fetch(`http://localhost:4000/shippingMethods`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setShippingMethods(data);\r\n        });\r\n        fetch(`http://localhost:4000/countries`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setCountries(data);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const handleAddNewAddress = () => {\r\n    setShowAddressForm(true);\r\n  };\r\n\r\n  const handleCancelAddress = () => {\r\n    setShowAddressForm(false);\r\n    setNewAddress({\r\n      direccion: \"\",\r\n      estado: \"\",\r\n      ciudad: \"\",\r\n      codigo_postal: \"\",\r\n      id_pais: \"\"\r\n    });\r\n  };\r\n\r\n  const handleSaveAddress = () => {\r\n    // Guardar la nueva dirección en la base de datos\r\n    fetch(`http://localhost:4000/addAddress`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId, ...newAddress }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          // Actualizar las direcciones mostradas después de agregar la nueva dirección\r\n          setAddresses([...addresses, newAddress]);\r\n          setShowAddressForm(false);\r\n          setNewAddress({\r\n            direccion: \"\",\r\n            estado: \"\",\r\n            ciudad: \"\",\r\n            codigo_postal: \"\",\r\n            id_pais: \"\"\r\n          });\r\n        } else {\r\n          console.error('Error:', data.error);\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewAddress({ ...newAddress, [name]: value });\r\n  };\r\n\r\n  const handleCountryChange = (e) => {\r\n    setNewAddress({ ...newAddress, id_pais: e.target.value });\r\n  };\r\n\r\n  const handleCheckout = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/checkout', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          userId,\r\n          shippingMethod,\r\n          cartItems: displayedItems.map(item => ({ id_item_producto: item.id, cantidad: item.cantidad }))\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.error) {\r\n        alert(data.error); // Mostrar mensaje de error en caso de existencias insuficientes\r\n      } else {\r\n        // Si todas las condiciones son exitosas, mostrar el formulario de método de pago\r\n        console.log(\"EL SALDO OBTENIDO DE TODO ELPROCESO: \", parseInt(saldo).toFixed(2));\r\n        console.log(\"TOTAL DE LA COMPRA: \", calculateTotal());\r\n        if (isNaN(parseFloat(saldo))) {\r\n          alert(\"ESCOGE UN METODO DE PAGO\");\r\n        } else        \r\n        if(calculateTotal() > parseInt(saldo).toFixed(2)){\r\n          alert(\"SALDO INSUFICIENTE\");\r\n        } else {\r\n          console.log(addresses, shippingMethods, paymentMethods);\r\n          alert(\"vamos bien :v\");\r\n        }\r\n\r\n      }\r\n    } catch (error) {\r\n      console.error('Error en el proceso de checkout:', error);\r\n      alert(\"Ocurrió un error al procesar el checkout.\");\r\n    }\r\n  };\r\n\r\n \r\n  const handleDecrement = (itemId) => {\r\n    // Update displayedItems locally\r\n    setDisplayedItems((prevItems) =>\r\n      prevItems.map((item) =>\r\n        item.id === itemId && item.cantidad > 1\r\n          ? { ...item, cantidad: item.cantidad - 1 }\r\n          : item\r\n      )\r\n      \r\n    );\r\n\r\n    // Update quantity on the server\r\n    fetch(`http://localhost:4000/cartItems/updateQuantity/${itemId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ operation: \"decrement\" }),\r\n    })\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  };\r\n\r\n  const handleIncrement = (itemId) => {\r\n    // Update displayedItems locally\r\n    setDisplayedItems((prevItems) =>\r\n      prevItems.map((item) =>\r\n        item.id === itemId ? { ...item, cantidad: item.cantidad + 1 } : item\r\n      )\r\n    );\r\n\r\n    // Update quantity on the server\r\n    fetch(`http://localhost:4000/cartItems/updateQuantity/${itemId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ operation: \"increment\" }),\r\n    })\r\n      .catch((error) => console.error(\"Error:\", error));\r\n\r\n      \r\n  };\r\n\r\n  const handleShippingMethodChange = (e) => {\r\n    setShippingMethod(e.target.value);\r\n    console.log(e.target);\r\n    const selectedMethod = shippingMethods.find(method => method.nombre === e.target.value);\r\n    if (selectedMethod) {\r\n      switch (selectedMethod.id) {\r\n        case 1:\r\n          setDeliveryTime(\"De 4 a 5 días de entrega\");\r\n          break;\r\n        case 2:\r\n          setDeliveryTime(\"De 1 a 2 días de entrega\");\r\n          break;\r\n        case 3:\r\n          setDeliveryTime(\"De 1 a 3 días de entrega\");\r\n          break;\r\n        default:\r\n          setDeliveryTime(\"\");\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddressChange = (e) => {\r\n    \r\n    \r\n  };\r\n\r\n  const handleRemoveItem = async (userId, itemId) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/removeCartItem', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ userId, itemId })\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (data.success) {\r\n        // Actualizar los ítems mostrados después de la eliminación\r\n        const updatedItems = displayedItems.filter(item => item.id !== itemId);\r\n        setDisplayedItems(updatedItems);\r\n      } else {\r\n        console.error('Error:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error removing item:', error);\r\n    }\r\n  };\r\n\r\n  const handleCancelPayment = () => {\r\n    // Limpiar los campos del formulario\r\n    setNewPaymentMethod({\r\n      nombre_portador: \"\",\r\n      numero_tarjeta: \"\",\r\n      cvv: \"\",\r\n      fecha_expiracion: \"\"\r\n    });\r\n    setShowPaymentForm(false);\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    // Sumar los totales de todos los items del carrito\r\n    const itemsTotal = displayedItems.reduce((total, item) => {\r\n      return total + ((item.precio - (item.precio * (item.descuento/100))) * item.cantidad);\r\n    }, 0);\r\n  \r\n    // Obtener el precio del método de envío escogido\r\n    const selectedMethod = shippingMethods.find(method => method.nombre === shippingMethod);\r\n    const shippingPrice = selectedMethod ? selectedMethod.precio : 0;\r\n  \r\n    // Sumar el precio del método de envío al total de la compra\r\n    const total = itemsTotal + shippingPrice;\r\n  \r\n    return total.toFixed(2);\r\n  };\r\n\r\n  const handlePaymentMethodChange = (event) => {\r\n    const selectedPaymentMethodId = event.target.value;\r\n    console.log(event.target.value);\r\n    // Llamar al backend para obtener el saldo asociado\r\n    fetch('http://localhost:4000/checkoutSaldo', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        userId: userId,\r\n        paymentMethodId: selectedPaymentMethodId // Enviar el ID del método de pago seleccionado\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setSaldo(data.saldo);\r\n      console.log('Saldo:', data.saldo); // Mostrar el saldo en la consola o actualizar la interfaz de usuario\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n  };\r\n  \r\n  // Función para validar el formulario del nuevo método de pago\r\n  const validatePaymentMethod = () => {\r\n    const { numero_tarjeta, cvv, fecha_expiracion } = newPaymentMethod;\r\n  \r\n    // Validar que el número de tarjeta tenga solo números y tenga exactamente 16 dígitos\r\n    const isValidCardNumber = /^\\d{16}$/.test(numero_tarjeta);\r\n  \r\n    // Validar que el CVV tenga solo números y tenga exactamente 3 dígitos\r\n    const isValidCVV = /^\\d{3}$/.test(cvv);\r\n  \r\n    // Validar la fecha de expiración\r\n    const isValidDate = validateExpiryDate(fecha_expiracion);\r\n  \r\n    return isValidCardNumber && isValidCVV && isValidDate;\r\n  };\r\n  \r\n  // Función para validar la fecha de expiración\r\n  const validateExpiryDate = (value) => {\r\n    // Validar que la fecha tenga el formato MM/YY\r\n    const isValidFormat = /^\\d{2}\\/\\d{2}$/.test(value);\r\n    if (!isValidFormat) {\r\n      setValidExpiryDate(false);\r\n      return false;\r\n    }\r\n  \r\n    // Extraer el mes y el año de la fecha de expiración\r\n    const [month, year] = value.split(\"/\");\r\n    const currentYear = new Date().getFullYear() % 100; // Obtener los últimos dos dígitos del año actual\r\n    const currentMonth = new Date().getMonth() + 1; // Obtener el mes actual\r\n  \r\n    // Validar que el mes esté en el rango de 01 a 12\r\n    const isValidMonth = parseInt(month, 10) >= 1 && parseInt(month, 10) <= 12;\r\n  \r\n    // Validar que el año sea mayor o igual al año actual si el mes es mayor que el actual\r\n    const isValidYear = parseInt(year, 10) >= currentYear || parseInt(month, 10) > currentMonth;\r\n  \r\n    // Actualizar el estado de la validez de la fecha de expiración\r\n    const isValid = isValidMonth && isValidYear;\r\n    setValidExpiryDate(isValid);\r\n  \r\n    return isValid;\r\n  };\r\n  \r\n  const handleSavePaymentMethod = async () => {\r\n    // Validar el formulario del método de pago\r\n    const isValid = validatePaymentMethod();\r\n  \r\n    if (isValid) {\r\n      const { numero_tarjeta, cvv, fecha_expiracion } = newPaymentMethod;\r\n  \r\n      // Realizar la consulta a la base de datos\r\n      try {\r\n        const response = await fetch('http://localhost:4000/checkCreditCard', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ numero_tarjeta, cvv, fecha_expiracion })\r\n        });\r\n  \r\n        const data = await response.json();\r\n  \r\n        if (data.exists) {\r\n          // Insertar los datos del método de pago en la base de datos\r\n          try {\r\n            const saveResponse = await fetch('http://localhost:4000/savePaymentMethod', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify({ \r\n                userId,\r\n                numero_tarjeta, \r\n                cvv, \r\n                nombre_portador: newPaymentMethod.nombre_portador, \r\n                fecha_expiracion \r\n              })\r\n            });\r\n  \r\n            const saveData = await saveResponse.json();\r\n  \r\n            if (saveData.success) {\r\n              alert(\"Tarjeta agregada con éxito\");\r\n              // Limpiar los campos del formulario después del éxito\r\n              setNewPaymentMethod({\r\n                nombre_portador: \"\",\r\n                numero_tarjeta: \"\",\r\n                cvv: \"\",\r\n                fecha_expiracion: \"\"\r\n              });\r\n              fetchPaymentMethods();\r\n  \r\n              // Cerrar el formulario (aquí puedes manejar el estado para mostrar/ocultar el formulario)\r\n              setShowPaymentForm(false);\r\n            } else {\r\n              console.error('Error al guardar el método de pago:', saveData.error);\r\n              alert(\"Ocurrió un error al guardar el método de pago.\");\r\n            }\r\n          } catch (error) {\r\n            console.error('Error al guardar el método de pago:', error);\r\n            alert(\"Ocurrió un error al guardar el método de pago.\");\r\n          }\r\n        } else {\r\n          alert(\"La tarjeta ingresada no existe\");\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al verificar la tarjeta:', error);\r\n        alert(\"Ocurrió un error al verificar la tarjeta.\");\r\n      }\r\n    } else {\r\n      alert(\"Por favor, completa todos los campos correctamente.\");\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n// Función para manejar el cambio en el número de tarjeta\r\nconst handleCardNumberChange = (e) => {\r\n  const { value } = e.target;\r\n  // Validar que solo se ingresen números y que no exceda los 16 dígitos\r\n  if (/^\\d{0,16}$/.test(value)) {\r\n    setNewPaymentMethod({ ...newPaymentMethod, numero_tarjeta: value });\r\n    // Validar la longitud del número de tarjeta\r\n    if (value.length < 16) {\r\n      setCardNumberError(\"Número de tarjeta incompleto\");\r\n    } else {\r\n      setCardNumberError(\"\");\r\n    }\r\n  }\r\n};\r\n\r\n// Función para manejar el cambio en el CVV\r\nconst handleCVVChange = (e) => {\r\n  const { value } = e.target;\r\n  // Validar que solo se ingresen números y que no exceda los 3 dígitos\r\n  if (/^\\d{0,3}$/.test(value)) {\r\n    setNewPaymentMethod({ ...newPaymentMethod, cvv: value });\r\n    // Validar la longitud del CVV\r\n    if (value.length < 3) {\r\n      setCVVError(\"CVV incompleto\");\r\n    } else {\r\n      setCVVError(\"\");\r\n    }\r\n  }\r\n};\r\n\r\n// Función para manejar el cambio en la fecha de expiración\r\nconst handleExpiryDateChange = (e) => {\r\n  let { value } = e.target;\r\n  // Validar que solo se ingresen números y que se agregue automáticamente el \"/\"\r\n  if (/^\\d{0,2}(\\/)?(\\d{0,2})?$/.test(value)) {\r\n    // Agregar automáticamente el \"/\" después de ingresar los primeros dos dígitos\r\n    if (/^\\d{2}$/.test(value)) {\r\n      value += \"/\";\r\n    }\r\n    // Validar la fecha de expiración\r\n    const [month, year] = value.split(\"/\");\r\n    const currentYear = new Date().getFullYear() % 100; // Obtener los últimos dos dígitos del año actual\r\n    const currentMonth = new Date().getMonth() + 1; // Obtener el mes actual\r\n    if (parseInt(month, 10) < currentMonth && parseInt(year, 10) <= currentYear || parseInt(year, 10) < currentYear || (parseInt(year, 10) === currentYear && parseInt(month, 10) < currentMonth)) {\r\n      setExpiryDateError(\"Fecha Incorrecta\");\r\n    } else {\r\n      setExpiryDateError(\"\");\r\n    }\r\n    // Actualizar el estado de la fecha de expiración\r\n    setNewPaymentMethod({ ...newPaymentMethod, fecha_expiracion: value });\r\n  }\r\n};\r\n\r\n  return (\r\n    <div className=\"cartitems\">\r\n      <div className=\"cartitems-format-main\">\r\n        <p>Imagen</p>\r\n        <p>Producto</p>\r\n        <p>Precio</p>\r\n        <p>Cantidad</p>\r\n        <p>Descuento</p>\r\n        <p>Total</p>\r\n        <p>Eliminar</p>\r\n      </div>\r\n      <hr />\r\n      {displayedItems.map((item) => (\r\n        <div key={item.id}>\r\n          <div className=\"cartitems-format-main cartitems-format\">\r\n            <img\r\n              className=\"cartitems-product-icon\"\r\n              src={item.imagen_producto1}\r\n              alt=\"\"\r\n            />\r\n            <p>{item.nombre_producto}</p>\r\n            <p>Q.{(item.precio).toFixed(2)}</p>\r\n            <div>\r\n              <button\r\n                onClick={() => handleDecrement(item.id)}\r\n                disabled={item.cantidad <= 1}\r\n              >\r\n                -\r\n              </button>\r\n              <p>{item.cantidad}</p>\r\n              <button onClick={() => handleIncrement(item.id)}>+</button>\r\n            </div>\r\n            <p>{item.descuento}%</p>\r\n            <p>Q.{((item.precio - (item.precio * (item.descuento/100))) * item.cantidad).toFixed(2)}</p>\r\n            <button\r\n              onClick={() => {\r\n                handleRemoveItem(userId, item.id);\r\n              }}\r\n              className=\"cartitems-remove-icon\"\r\n            >\r\n              <img src={cross_icon} alt=\"\" />\r\n            </button>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      ))}\r\n      {showAddressForm && (\r\n        <div>\r\n          <h3>Nueva Dirección</h3>\r\n          <div>\r\n            <label>Dirección:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"direccion\"\r\n              value={newAddress.direccion}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Estado:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"estado\"\r\n              value={newAddress.estado}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Ciudad:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"ciudad\"\r\n              value={newAddress.ciudad}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Código Postal:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"codigo_postal\"\r\n              value={newAddress.codigo_postal}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>País:</label>\r\n            <select value={newAddress.id_pais} onChange={handleCountryChange}>\r\n              <option value=\"\">Seleccionar País</option>\r\n              {countries.map((country) => (\r\n                <option key={country.id} value={country.id}>\r\n                  {country.nombre_pais}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <button onClick={handleSaveAddress}>Guardar</button>\r\n            <button onClick={handleCancelAddress}>Cancelar</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* Elementos adicionales para la dirección y checkout */}\r\n      <div className=\"additional-elements\">\r\n        Dirección:   \r\n        <select value={address} onChange={handleAddressChange}>\r\n          {addresses.map((address, index) => (\r\n            <option key={index} value={address.id}>{`${address.ciudad}, ${address.direccion}`}</option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleAddNewAddress}>Agregar Nueva Dirección</button>\r\n        <div>\r\n          <label>\r\n            Método de Envío:\r\n            <select value={shippingMethod} onChange={handleShippingMethodChange}>\r\n              {shippingMethods.map((method, index) => (\r\n                <option key={index} value={method.id}>{`${method.nombre} - Q.${method.precio}`}</option>\r\n              ))}\r\n            </select>\r\n            {deliveryTime}\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>Total de la Compra:</label>\r\n          <input type=\"text\" value={`Q.${calculateTotal()}`} readOnly />\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Métodos de Pago:\r\n            <select name=\"paymentMethod\" onChange={handlePaymentMethodChange}>\r\n            <option value=\"\">Seleccionar Metodo de Pago</option>\r\n              {paymentMethods.map((method, index) => (\r\n                <option key={index} value={method.id}>\r\n                  {`No. Tarjeta: ${method.numero_tarjeta}, Portador: ${method.nombre_portador}`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <button onClick={() => setShowPaymentForm(true)}>Agregar Nuevo Método de Pago</button>\r\n          </label>\r\n          {showPaymentForm && (\r\n            <div>\r\n              <h3>Nuevo Método de Pago</h3>\r\n              <div>\r\n                <label>Nombre del Portador:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"nombre_portador\"\r\n                  value={newPaymentMethod.nombre_portador}\r\n                  onChange={handlePaymentMethodChange}\r\n                />\r\n              </div>\r\n              <div>\r\n  <label>Número de Tarjeta:</label>\r\n  <input\r\n    type=\"text\"\r\n    name=\"numero_tarjeta\"\r\n    value={newPaymentMethod.numero_tarjeta}\r\n    onChange={handleCardNumberChange}\r\n  />\r\n  {cardNumberError && <p>{cardNumberError}</p>}\r\n</div>\r\n<div>\r\n  <label>CVV:</label>\r\n  <input\r\n    type=\"text\"\r\n    name=\"cvv\"\r\n    value={newPaymentMethod.cvv}\r\n    onChange={handleCVVChange}\r\n  />\r\n  {cvvError && <p>{cvvError}</p>}\r\n</div>\r\n<div>\r\n  <label>Fecha de Expiración (MM/YY):</label>\r\n  <input\r\n    type=\"text\"\r\n    name=\"fecha_expiracion\"\r\n    value={newPaymentMethod.fecha_expiracion}\r\n    onChange={handleExpiryDateChange}\r\n  />\r\n  {expiryDateError && <p>{expiryDateError}</p>}\r\n</div>\r\n<div>\r\n<button onClick={handleSavePaymentMethod} disabled={cardNumberError || cvvError || expiryDateError}>Guardar</button>\r\n                <button onClick={handleCancelPayment}>Cancelar</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button onClick={handleCheckout}>Checkout</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default CartItems;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}